name: Build and Publish Docker to ghcr

on:
  pull_request:
    branches:
      - release
    types:
      - closed

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: test
  PULL_REQUEST_BODY: "${{ github.event.pull_request.body }}"

jobs:
  build-and-push:
    # pull requestがmergeされた時のみ実行 
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      # generate tags from pull request comments
      - name: Geterate Tags From PR Comments
        id: pr-comment
        run: |
          PRCOM=$(echo "$PULL_REQUEST_BODY" | grep -Po '(?<=tag: )v\d+\.\d+\.\d+')
          echo "TAG1=ghcr.io/$OWNER_LC/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_ENV
          echo "TAG2=ghcr.io/$OWNER_LC/${{ env.IMAGE_NAME }}:$PRCOM" >> $GITHUB_ENV

      # login ghcr
      - name: login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # build docker image 
      - name: build docker image
        id: build-image
        run: |
          docker compose -f docker-compose.yml build
      # get docker image id
      - name: get docker image id
        id: getid-image
        run: |
          docker images | awk 'NR>1 {print $3}' | xargs -I {} echo "IMAGEINFO={}" >> $GITHUB_ENV
      # add tags docker image 
      - name: add tags docker image
        id: addtags-image
        run: |
          docker tag $IMAGEINFO $TAG1
          docker tag $IMAGEINFO $TAG2
      # push docker image 
      - name: push docker image
        id: push-image
        run: |
          docker push ghcr.io/$OWNER_LC/${{ env.IMAGE_NAME }}      
