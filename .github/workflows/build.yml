name: Build and Publish Docker to ghcr

on:
  pull_request:
    branches:
      - release
    types:
      - closed
permissions: write-all
env:
  # github.repository as <account>/<repo>
  PROJECT_NAME: sample
  PULL_REQUEST_BODY: "${{ github.event.pull_request.body }}"

jobs:
  build-and-push:
    # pull requestがmergeされた時のみ実行 
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      # generate tags from pull request comments
      - name: Geterate Tags From PR Comments
        id: pr-comment
        run: |
          echo "$PULL_REQUEST_BODY" | grep -Po '(?<=tag: )v\d+\.\d+\.\d+' | xargs -I {} echo "IMAGEVERSION={}" >> $GITHUB_ENV
      # login ghcr
      - name: login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # 1. Buildxのセットアップ
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      # 3. Buildxでイメージをビルドする
      - name: Build images - App
        uses: docker/build-push-action@v4
        with:
          push: false
          builder: ${{ steps.buildx.outputs.name }} # Buildxでビルドすることを指定
          load: true
          context: .
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache-app # キャッシュを指定
          cache-to: type=local,dest=/tmp/.buildx-cache-new-app # キャッシュを指定
      # build docker image 
      - name: build docker image
        id: build-image
        run: |
          docker compose -p ${{ env.PROJECT_NAME }} -f docker-compose.yml build
      # get docker image id and repo
      - name: get docker image id and repo
        id: get-idrepo-image
        run: |
          docker images --format "{{.ID}} {{.Repository}}" | tee image_list.txt
      # add tags and push docker image 
      - name: add tags and push docker image
        id: addtags-and-push-image
        run: |
          while IFS= read -r line; do
            image_id=$(echo $line | awk '{print $1}')
            image_name=$(echo $line | awk '{print $2}')

            latest_tag="ghcr.io/${{ env.OWNER_LC }}/${image_name}:latest"
            version_tag="ghcr.io/${{ env.OWNER_LC }}/${image_name}:${{ env.IMAGEVERSION }}"

            docker tag "$image_id" "$latest_tag"
            docker tag "$image_id" "$version_tag"

            docker push "$latest_tag"
            docker push "$version_tag"
          done < image_list.txt
